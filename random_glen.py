import numpy as np
from scipy import stats
from matplotlib import pyplot as plt

random = np.array(list(map(float, open("glen_diat_simul_random.txt", "r").read().split())))

print("# random values:", len(random))
f, (ax_hist, ax_box) = plt.subplots(2, sharex=True, gridspec_kw={"height_ratios": (.85, .15)})
random = random/0.21979979633964095 #get random/model (0.2197... is the MaxEnt-predicted flow rate)

mu = np.mean(random)
sigma = np.std(random, ddof=1)
print("mean:", mu, "\tstdev:", sigma, "\tmin:", np.min(random), "\tmax:", np.max(random))
print("normality test:", stats.normaltest(random)) #D'Agostino's K^2 test (https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.normaltest.html)

actual = 0.316/0.21979979633964095 #0.316 is the empirical flow rate
print(2*stats.norm.cdf((mu-actual)/sigma)) #p-value for "observed value is chosen from distribution generated by random model"

#histogram/box plot for random model distribution
ax_box.boxplot(random, vert=False)
ax_hist.hist(random, bins = np.linspace(0.8, 1.2, 40))
plt.show()
